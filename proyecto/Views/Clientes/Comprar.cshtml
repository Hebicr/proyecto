@model proyecto.Models.RegistrosPolizas

@{
    ViewBag.Title = "Comprar";
}

<body background="\img\Prueba.png" style="width:100%; height:100%; background-size: cover;">

    @using (Html.BeginForm("ComprarPoliza", "Clientes"))
    {
        @Html.AntiForgeryToken()

        <div class="container" style="background-color: white; border-radius:5px 5px">
            <div class="form-horizontal form-group-sm col-md-12">
                <div class="text-center">
                    <h4>Compra Polizas</h4>
                </div>
                <br />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group col-xs-12 col-md-6">
                    @Html.Label("idCliente:", "idCliete:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.Editor("idCliente", "idCliente", new { htmlAttributes = new { @class = "form-control", @required = "required", @Value = @TempData["idCliente"], @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.idCoberturaPoliza, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group col-xs-12 col-md-6">
                    @Html.Label("Cobertura:", "Cobertura:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.idCoberturaPoliza, ViewBag.coberturas as SelectList, "-- Seleccione una Cobertura --", new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.idCoberturaPoliza, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-md-6">
                    @Html.Label("Porcentaje %:", "Porcentaje %:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.Editor("Porcentaje", new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.idCoberturaPoliza, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-md-6">
                    @Html.Label("Monto Asegurado:", "Monto Asegurado:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.montoAsegurado, new { htmlAttributes = new { @class = "form-control", @min = "3000000", @max = "100000000", @type = "number", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.montoAsegurado, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-md-6">
                    @Html.Label("Número adiciones:", "Número adiciones:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.Editor("cantAdiciones1", "cantAdiciones1", new { htmlAttributes = new { @class = "form-control", @Value = Convert.ToInt32(@ViewBag.cantAdiciones), @readonly = "readonly", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.numeroAdiciones, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-md-6">
                    @Html.Label("Monto adicciones:", "Monto adicciones:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.montoAdiciones, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.montoAdiciones, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group  col-xs-12 col-md-6">
                    @Html.Label("Prima Antes:", "Prima Antes:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.primaAntesImpuestos, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.primaAntesImpuestos, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-md-6">
                    @Html.Label("Impuestos:", "Impuestos:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.impuestos, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.impuestos, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-md-6">
                    @Html.Label("Prima final:", "Prima final:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.primaFinal, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.primaFinal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-12 col-md-6">
                    @Html.Label("Fecha Vencimiento:", "Fecha Vencimiento:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.fechaVencimiento, new { htmlAttributes = new { @class = "form-control", @required = "required", @type="date" } })
                        @Html.ValidationMessageFor(model => model.fechaVencimiento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="form-group col-xs-12 col-md-12">
                    <div class="col-md-7">
                        <input type="submit" style="float:right; margin-left:20px" value="Comprar" class="btn btn-success" />
                        <input type="button" style="float:right" value="Cancelar" class="btn btn-danger" onclick="location.href='@Url.Action("ClientesxAdiciones","Clientes")';" />

                    </div>
                </div>
            </div>
        </div>
    }
    <div class="col-md-offset-2 col-md-8">
        @if (ViewData["Mensaje"] != null)
        {
            <div class="alert alert-success" role="alert">
                @ViewData["Mensaje"]
            </div>
        }

        @if (ViewData["Error"] != null)
        {
            <div class="alert alert-danger" role="alert">
                @ViewData["Error"]
            </div>
        }
    </div>
</body>

    @section Scripts{
        <script>
            $(document).ready(function () {
                $("#idCoberturaPoliza").change(function () {
                    $.get("/Clientes/RetornaPorcentaje?",
                        { idCoberturaPoliza: $("#idCoberturaPoliza").val() },
                        function (data) {
                            $("#Porcentaje").empty();
                            $.each(data, function (index, row) {
                                $("#Porcentaje").val(row.Porcentaje);
                            });
                        }
                    )
                });
                //var x = $("#cantAdiciones2").val();
                //$("#cantAdiciones").val(x);

                $("#montoAsegurado").focusout( montoAdiciones );

                function montoAdiciones() {
                    var cantAdiciones = parseInt($("#cantAdiciones1").val());
                    var porcentaje;
                    switch (cantAdiciones) {
                        case (cantAdiciones = 1):
                            porcentaje = 0.05;
                            break;
                        case (cantAdiciones = 2):
                            porcentaje = 0.10;
                            break;
                        case (cantAdiciones = 3):
                            porcentaje = 0.10;
                            break;
                        case (cantAdiciones > 3):
                            porcentaje = 0.15;
                            break;
                        default:
                            porcentaje = 0;
                            break;
                    }
                    var montoAsegurado = parseInt($("#montoAsegurado").val());

                    var totalMontoAdiciones;

                    totalMontoAdiciones = porcentaje * montoAsegurado
                    $("#montoAdiciones").val(totalMontoAdiciones);

                    var PrimaAntesImpuestos;

                    PrimaAntesImpuestos = totalMontoAdiciones + montoAsegurado;

                    $("#primaAntesImpuestos").val(PrimaAntesImpuestos);

                    var impuestos = PrimaAntesImpuestos * 0.13;

                    $("#impuestos").val(impuestos);

                    var primaFinal;

                    primaFinal = impuestos + PrimaAntesImpuestos;

                    $("#primaFinal").val(primaFinal);

                }
            });
        </script>
    }
